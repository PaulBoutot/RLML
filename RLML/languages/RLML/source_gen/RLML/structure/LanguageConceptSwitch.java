package RLML.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Actions = 0;
  public static final int ActorCritic = 1;
  public static final int DQN = 2;
  public static final int DoneStates = 3;
  public static final int Environment = 4;
  public static final int Hyperparameters = 5;
  public static final int MonteCarloControl = 6;
  public static final int QLearning = 7;
  public static final int RLAgent = 8;
  public static final int RLAlgorithm = 9;
  public static final int RLML = 10;
  public static final int RLMLComparator = 11;
  public static final int Result = 12;
  public static final int Rewards = 13;
  public static final int SARSA = 14;
  public static final int Settings = 15;
  public static final int States = 16;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x3c2f74fb565a4cb8L, 0x8a8142024cc7aa10L);
    builder.put(0x1d76fb9dad847c98L, Actions);
    builder.put(0x42c2fdc337c72df2L, ActorCritic);
    builder.put(0x41f9d76e6f0c3626L, DQN);
    builder.put(0x7adf9c592617f60eL, DoneStates);
    builder.put(0x4613d414d7bcd92aL, Environment);
    builder.put(0x6166013d0c7aea5cL, Hyperparameters);
    builder.put(0x42c2fdc337cf3064L, MonteCarloControl);
    builder.put(0x3a3770586b503ad3L, QLearning);
    builder.put(0x4613d414d7bcd92bL, RLAgent);
    builder.put(0x6166013d0c7ae9d6L, RLAlgorithm);
    builder.put(0x4613d414d7bcd8f1L, RLML);
    builder.put(0x10f517300f75a927L, RLMLComparator);
    builder.put(0x4613d414d7bcd92cL, Result);
    builder.put(0x49c190188964fa77L, Rewards);
    builder.put(0x6166013d0c7aea76L, SARSA);
    builder.put(0x6166013d0c7aea5bL, Settings);
    builder.put(0x1d76fb9dad847c95L, States);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
